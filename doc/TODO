$Id: TODO,v 1.9 2007-11-28 13:01:21 geuzaine Exp $

*******************************************************************

make uninstall

*******************************************************************

PETSc solvers: matrix assembly is extremely slow if not preallocated
correctly. Need to preallocate global equations separately from local
ones. Idea: allocate full rows for global equations.

*******************************************************************

verify if the post-pro uses the correct frequency for each system if
the frequency was changed by hand using SetFrequency in the
resolution, in between two GenerateSystem

*******************************************************************

If we use petsc+complex+mpi, the CC is not set to the c++ compiler
(it is when using petsc+compex)

*******************************************************************

Move the optional code (Arpack, Sparksit?, NR) into new contrib/
directory

********************************************************************

Arguments in nested expressions don't work. A workaround is to store
the arguments in registers (i.e. with '#1'-like commands).

********************************************************************

Global quantities have to be defined on "single" regions, i.e. regions
of type aa = Region[num].

********************************************************************

Should recompute Current.x,y,z in Cal_vBFxDof??

********************************************************************

Andre Nicolet <andre.nicolet@fresnel.fr>

* generalize localterm (equation part should call Cal_vBFxDof)

* add field in Data_Function for vector-valued basis functions:
generalized gradient

* define x, y and z derivatives of vector-valued basis functions

* define a 'generalized gradient' basis function based on these
partial derivatives (warning: change of ccords!)

* generalize Cal_Galerkin, Get_FunctionValue, etc. so that they accept
the tensor values retuned by the generalized gradient
