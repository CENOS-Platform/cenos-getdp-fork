$Id: FAQ,v 1.11 2006-02-25 08:02:58 geuzaine Exp $

This is the GetDP FAQ

********************************************************************

Section 1: The basics

* 1.1 What is GetDP?

GetDP is a scientific software environment for the numerical solution
of integro-differential equations, open to the coupling of physical
problems (electromagnetic, thermal, mechanical, etc) as well as of
numerical methods (finite element method, integral methods, etc). It
can deal with such problems of various dimensions (1D, 2D, 2D
axisymmetric or 3D) and time states (static, transient or
harmonic). The main feature of GetDP is the closeness between the
organization of data defining discrete problems (written by the user
in ASCII data files) and the symbolic mathematical expressions of
these problems.

* 1.2 What are the terms and conditions of use?

GetDP is distributed under the terms of the GNU General Public
License. See the file doc/LICENSE for more information, or go to the
GNU foundation's web site at http://www.gnu.org.

* 1.3 What does 'GetDP' mean?

It's an acronym for a "General environment for the treatment of
Discrete Problems".

* 1.4 Where can I find more information?

<http://www.geuz.org/getdp/> is the primary site to obtain information
about GetDP. You will find a short presentation, a complete reference
guide as well as a searchable archive of the GetDP mailing list
(<getdp@geuz.org>) on this site.

********************************************************************

Section 2: Installation

* 2.1 Which OSes does GetDP run on?

GetDP is known to run on Windows 95/98/NT/2000/XP, Linux, Mac OS X,
Compaq Tru64 Unix (aka OSF1, aka Digital Unix), Sun OS, IBM AIX, SGI
IRIX, FreeBSD and HP-UX. It should compile on any Unix-like operating
system, provided that you have access to a recent C and Fortran 77
compiler.

* 2.2 What do I need to compile GetDP from the sources?

You need a C and a Fortran 77 compiler (e.g. the GNU compilers gcc and
g77) as well as the GSL (version 1.2 or higher; freely available from
http://sources.redhat.com/gsl/).

* 2.3 How to I compile GetDP?

Just type 

./configure; make; make install

If you change some configuration options (type ./configure --help to
get the list of all available choices), don't forget to do 'make
clean' before rebuilding GetDP.

* 2.4 GetDP [from a binary distribution] complains about missing
libraries.

Try 'ldd getdp' (or 'otool -L getdp' on Mac OS X) to check if all the
required shared libraries are installed on your system. If not,
install them. If it still doesn't work, recompile GetDP from the
sources.

********************************************************************

Section 3: Usage

* 3.1 How can I provide a mesh to GetDP?

The only meshing format accepted by this version of GetDP is the 'msh'
format created by Gmsh (<http://www.geuz.org/gmsh>). This format being
very simple (see the reference GetDP manual for more details), it
should be straightforward to write a converter from your mesh format
to the 'msh' format.

* 3.2 How can I visualize the results produced by GetDP?  

You can specify a format in all post-processing operations. Available
formats include 'Table', 'TimeTable' and 'Gmsh'. 'Table' and
'TimeTable' output lists of numbers easily readable by
Excel/gnuplot/Caleida Graph/etc. 'Gmsh' outputs post-processing views
directly loadable by Gmsh.

* 3.3 How do I change the linear solver used by GetDP?

Edit the 'solver.par' file in the current working directory. You can
also remove the file: GetDP will give you the opportunity to create it
dynamically next time you perform a linear system solving.

If you don't like the default linear solvers (based on Yousef Saad's
Sparskit 2.0), you can configure and compile GetDP to use PETSc
(http://www.mcs.anl.gov/petsc) instead: run ./configure --help for
more info.
