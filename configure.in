dnl $Id: configure.in,v 1.49 2005-07-06 15:12:51 geuzaine Exp $
dnl
dnl Copyright (C) 1997-2004 P. Dular, C. Geuzaine
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
dnl USA.
dnl 
dnl Please report all bugs and problems to <getdp@geuz.org>.

dnl Process this file with autoconf to produce the configure script.

dnl Check that this is the getdp source tree
AC_INIT(Parser/GetDP.y)

dnl Parse '--with' command-line options
AC_ARG_WITH(gsl-prefix,
            AC_HELP_STRING([--with-gsl-prefix=PFX],
                           [prefix where GSL is installed]),
            [GSL_PREFIX=$withval])
AC_ARG_WITH(lapack-prefix,
            AC_HELP_STRING([--with-lapack-prefix=PFX],
                           [prefix where BLAS/LAPACK is installed]),
            [LAPACK_PREFIX=$withval])
AC_ARG_WITH(readline-prefix,
            AC_HELP_STRING([--with-readline-prefix=PFX],
                           [prefix where GNU readline is installed]),
            [READLINE_PREFIX=$withval])
AC_ARG_WITH(petsc-prefix,
            AC_HELP_STRING([--with-petsc-prefix=PFX],
                           [prefix where PETSc is installed]),
            [PETSC_PREFIX=$withval],[PETSC_PREFIX="${PETSC_DIR}"])
AC_ARG_WITH(petsc-arch,
            AC_HELP_STRING([--with-petsc-arch=ARCH],
                           [PETSc architecture]),
            [PETSC_ARCH=$withval])
AC_ARG_WITH(bopt,
            AC_HELP_STRING([--with-bopt=PFX],
                           [BOPT option to use with PETSc]),
            [BOPT=$withval])
AC_ARG_WITH(metis-prefix,
            AC_HELP_STRING([--with-metis-prefix=PFX],
                           [prefix where METIS is installed]),
            [METIS_PREFIX=$withval])
AC_ARG_WITH(fftw-prefix,
            AC_HELP_STRING([--with-fftw-prefix=PFX],
                           [prefix where FFTw is installed]),
            [FFTW_PREFIX=$withval])

dnl Parse '--enable' command line options
AC_ARG_ENABLE(multiharmonic,
              AC_HELP_STRING([--enable-multiharmonic],
                             [enable multiharmonic (> 2) calculations (default=no)]))
AC_ARG_ENABLE(petsc,
              AC_HELP_STRING([--enable-petsc],
                             [use PETSc linear solvers (default=no)]))
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [build debug stack frame (default=no)]))
AC_ARG_ENABLE(purewin32,
              AC_HELP_STRING([--enable-purewin32],
                             [don't depend on Cygwin on Windows (default=no)]))
AC_ARG_ENABLE(gsl,
              AC_HELP_STRING([--enable-gsl],
                             [use GSL as numerical toolkit (default=yes)]))
AC_ARG_ENABLE(readline,
              AC_HELP_STRING([--enable-readline],
                             [use GNU readline (default=yes)]))

dnl Get the operating system and version number
UNAME=`uname`
UVERSION=`uname -r | sed -e '1,$s/[[^0-9]]//g'`

dnl Treat special cases (MingW doesn't provide any output when uname is run)
if test "x${UNAME}" = "x"; then
  uname="MINGW"
fi
case "${UNAME}" in
  CYGWIN*)
    if test "x$enable_purewin32" = "xyes"; then
      UNAME=MINGW
    fi
    ;;
esac

dnl Check for default compilers
AC_PROG_CC
AC_PROG_F77
if test "x${CC}" = "x" -o "x${F77}" = "x" ; then
  AC_MSG_ERROR([Could not find required compilers, aborting.])
fi

dnl Use C for tests
AC_LANG(C)

dnl Set default compiler flags
C_FLAGS="${CFLAGS}"
C_PARSER_FLAGS="${CFLAGS}"
F77_FLAGS="${FFLAGS}"

dnl Check for various programs
AC_PROG_CPP
AC_PROG_RANLIB

dnl How to build static libraries?
AC_PATH_PROG(AR, ar)
if test "x${AR}" = "x:"; then
  AC_MSG_ERROR([Could not find the library archiver, aborting.])
fi
AR="${AR} ruvs"

dnl Check for standard math library
AC_CHECK_LIB(m,main)

dnl See if we need a .exe extension on executables
AC_EXEEXT

dnl Set default subdirectories and libraries
GETDP_DIRS="Main Parser Post Function Integration GeoData DofData Numeric DataStr FMM"
GETDP_LIBS="-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lSparskit -lDataStr -lFMM"

dnl Modify the above defaults and specify the linker
if test "x$enable_petsc" = "xyes"; then

  GETDP_LIBS='-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lDataStr -lFMM ${PETSC_SLES_LIB} ${PETSC_KSP_LIB} -lm'
  SOLVER='-DHAVE_PETSC ${PETSCFLAGS} ${PETSC_INCLUDE}'
  LINKER='${CLINKER}'
  if test "x${PETSC_PREFIX}" != "x"; then
    PETSC_DIR="${PETSC_PREFIX}"	
  fi
  PETSC_INCLUDE_MAKEFILE='include ${PETSC_DIR}/bmake/common/variables'
  if test "x${PETSC_ARCH}" = "x"; then
    AC_CHECK_FILE(${PETSC_DIR}/bin/petscarch,OLD_PETSC="yes",OLD_PETSC="no")
    if test "x${OLD_PETSC}" = "xyes"; then
      PETSC_ARCH=`${PETSC_DIR}/bin/petscarch`
    else
      AC_MSG_ERROR([Could not determine PETSC_ARCH. Run configure again with --with-petsc-arch.])
    fi
  fi
  dnl BOPT is not used in PETSc >= 2.3, but this does not hurt
  if test "x${BOPT}" = "x"; then
     BOPT="g_complex"
  fi

else

  GETDP_DIRS="${GETDP_DIRS} Sparskit"
  SOLVER='-DHAVE_SPARSKIT -DHAVE_ILU_FLOAT'
  LINKER='${F77}'
  case "${UNAME}" in
    IRIX*)
      dnl options for native SGI compiler
      if test "x${CC}" = "xcc"; then
        dnl add "-mips3 -n32" to all flags for portable 32 bit exe
        dnl -DHAVE_ILU_FLOAT crashes Sparskit
        SOLVER="-DHAVE_SPARSKIT"
      fi
      ;;
    HP-UX*)
      dnl options for native HP compiler
      if test "x${CC}" = "xcc"; then
        C_FLAGS="+O2 +Onolimit -Ae +DAportable"
        C_PARSER_FLAGS="+O1 -Ae +DAportable"
      fi
      if test "x${F77}" = "xf77"; then
        F77_FLAGS="+O2 +DAportable"
        LINKER="f77 +DAportable"
        GETDP_LIBS="Main/Main.o ${GETDP_LIBS}"
        SOLVER="-DHAVE_UNDERSCORE ${SOLVER}"
      fi
      ;;
    OSF1*)
      dnl options for native DEC compiler
      if test "x${CC}" = "xcc"; then
        C_PARSER_FLAGS="-O1"
      fi
      if test "x${F77}" = "xf77"; then
        LINKER="f77 -nofor_main"
      fi
      ;;
    SunOS*)
      GETDP_LIBS="${GETDP_LIBS} -lsocket"
      ;;
    AIX*)
      dnl options for native AIX compiler
      if test "x${CC}" = "xcc"; then
        C_FLAGS="-O2 -D_BSD -qMAXMEM=10000"
        C_PARSER_FLAGS="-O1 -D_BSD -qMAXMEM=10000"
      fi
      if test "x${F77}" = "xf77"; then
        F77_FLAGS="-O2 -D_BSD -qMAXMEM=10000"
        SOLVER="-DHAVE_SPARSKIT -DHAVE_UNDERSCORE"
      fi
      ;;
    MINGW*)
      CC="gcc -mno-cygwin"
      F77="g77 -mno-cygwin"
      C_FLAGS="-g -O3 -DMSDOS"
      F77_FLAGS="-g -O1 -DMSDOS"
      ;;
  esac

fi

dnl Check for GSL 
if test "x$enable_gsl" != "xno"; then
  if test "x${GSL_PREFIX}" != "x"; then
    LDFLAGS="-L${GSL_PREFIX}/lib ${LDFLAGS}"
  fi
  AC_CHECK_LIB(gslcblas,main)
  AC_CHECK_LIB(gsl,main,GSL="yes",GSL="no")
  if test "x${GSL}" = "xyes"; then
    C_FLAGS="${C_FLAGS} -DHAVE_GSL"
    if test "x${GSL_PREFIX}" = "x"; then
      GETDP_LIBS="${GETDP_LIBS} -lgsl -lgslcblas"
    else
      GETDP_LIBS="${GETDP_LIBS} -L${GSL_PREFIX}/lib -lgsl -lgslcblas"
      C_FLAGS="${C_FLAGS} -I${GSL_PREFIX}/include"
    fi
  fi
fi
if test "x${GSL}" != "xyes"; then
  dnl Check if non-free numerical recipes routines are in the tree
  AC_CHECK_FILE(./NR/dsvdcmp.c,NR="yes",NR="no")
  if test "x${NR}" = "xyes"; then
    echo "********************************************************************"
    echo "You are building a non-free version of GetDP, using code copyright"
    echo "(C) 1986-92 Numerical Recipes Software J!0."
    echo "To use the GSL instead, run configure again with the --enable-gsl"
    echo "option."
    echo "********************************************************************"
    GETDP_DIRS="${GETDP_DIRS} NR"
    GETDP_LIBS="${GETDP_LIBS} -lNR"
  else
    echo "********************************************************************"
    echo "This is the free version of GetDP and configure could not find"
    echo "the GNU Scientific Library (GSL) on your system:"
    echo "- if it is installed in a non-standard location, please run"
    echo "  configure again with the --with-gsl-prefix option"
    echo "- if it is not installed on your system, you can download it from"
    echo "  http://sources.redhat.com/gsl/"
    echo ""
    echo "IMPORTANT NOTE: You need to install GSL version 1.2 or above. All"
    echo "versions <= 1.1.1 have a bug in the singular value decomposition"
    echo "algorithm that may cause GetDP to hang during execution."
    echo "********************************************************************"
    AC_MSG_ERROR([Could not find GSL, aborting.])
  fi
fi

dnl Check for lapack and blas (and use Arpack if we have them)
AC_LANG_PUSH(Fortran 77)
if test "x${LAPACK_PREFIX}" != "x"; then
  LDFLAGS="-L${LAPACK_PREFIX} ${LDFLAGS}"
fi
AC_CHECK_LIB(blas,dasum,BLAS="yes",BLAS="no")
if test "x${BLAS}" = "xyes"; then
  AC_CHECK_LIB(lapack,dbdsqr,LAPACK="yes",LAPACK="no",-lblas)
  if test "x${LAPACK}" = "xyes"; then
    C_FLAGS="${C_FLAGS} -DHAVE_LAPACK"
    GETDP_DIRS="${GETDP_DIRS} Arpack"
    GETDP_LIBS="${GETDP_LIBS} -lArpack"
    if test "x${LAPACK_PREFIX}" = "x"; then
      GETDP_LIBS="${GETDP_LIBS} -llapack -lblas"
    else
      GETDP_LIBS="${GETDP_LIBS} -L${LAPACK_PREFIX} -llapack -lblas"
    fi   
  fi
fi
AC_LANG_POP()

dnl Do we trace the function calls in getdp?
if test "x$enable_debug" = "xyes"; then
  C_FLAGS="${C_FLAGS} -DHAVE_DEBUG_STACK"
fi

dnl Do we enable large multiharmic calculations?
if test "x$enable_multiharmonic" = "xyes"; then
  C_FLAGS="${C_FLAGS} -DHAVE_MULTIHARMONIC"
fi

dnl Check for METIS
if test "x${METIS_PREFIX}" != "x"; then
  METIS_DIR="${METIS_PREFIX}"	
fi

dnl Check for FFTW (not used in public release)
if test "x${FFTW_PREFIX}" != "x"; then
  FFTW_DIR="${FFTW_PREFIX}"	
fi
CPPFLAGS="-I${FFTW_DIR}/include"
AC_CHECK_HEADER(fftw.h,FFTW="yes",FFTW="no")
LDFLAGS="-L${FFTW_DIR}/lib ${LDFLAGS}"
AC_CHECK_LIB(fftw,main,FFTW="yes",FFTW="no",-lm)

dnl Check for GNU readline
if test "x$enable_readline" != "xno"; then
  if test "x${READLINE_PREFIX}" != "x"; then
    CPPFLAGS="-I${READLINE_PREFIX}/include"
    LDFLAGS="-L${READLINE_PREFIX}/lib ${LDFLAGS}"
  fi
  AC_CHECK_HEADER(readline/readline.h,READLINE="yes",READLINE="no")
  dnl readline neads the termcap functions (also available in libcurses)
  AC_CHECK_LIB(termcap,main,TERMCAP="yes",TERMCAP="no")
  if test "x${TERMCAP}" = "xyes"; then
    AC_CHECK_LIB(readline,main,READLINE="yes",READLINE="no",-lhistory -ltermcap)
  else
    AC_CHECK_LIB(curses,main,CURSES="yes",CURSES="no")
    if test "x${CURSES}" = "xyes"; then
      AC_CHECK_LIB(readline,main,READLINE="yes",READLINE="no",-lhistory -lcurses)
    else
      READLINE="no"
    fi
  fi
  if test "x${READLINE}" = "xyes"; then
    C_FLAGS="${C_FLAGS} -DHAVE_READLINE"
    if test "x${READLINE_PREFIX}" = "x"; then
      GETDP_LIBS="${GETDP_LIBS} -lreadline -lhistory"
    else
      GETDP_LIBS="${GETDP_LIBS} -L${READLINE_PREFIX}/lib -lreadline -lhistory"
      C_FLAGS="${C_FLAGS} -I${READLINE_PREFIX}/include"
    fi
    if test "x${TERMCAP}" = "xyes"; then
      GETDP_LIBS="${GETDP_LIBS} -ltermcap"
    else
      GETDP_LIBS="${GETDP_LIBS} -lcurses"
    fi
  fi
fi

dnl Finish link line
case "${UNAME}" in
  MINGW*)
    dnl '-lm' is removed on purpose!
    ;;
  Darwin*)
    dnl force C linker on Mac OS X
    LINKER="gcc"
    GETDP_LIBS="${GETDP_LIBS} -lg2c -lm"
    ;;
  *)
    GETDP_LIBS="${GETDP_LIBS} -lm"    
    ;;
esac

dnl Check for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h sys/resource.h)

dnl Write output
AC_SUBST(UNAME)
AC_SUBST(C_FLAGS)
AC_SUBST(C_PARSER_FLAGS)
AC_SUBST(F77_FLAGS)
AC_SUBST(SOLVER)
AC_SUBST(LINKER)
AC_SUBST(GETDP_DIRS)
AC_SUBST(GETDP_LIBS)
AC_SUBST(AR)
AC_SUBST(PETSC_INCLUDE_MAKEFILE)
AC_SUBST(PETSC_DIR)
AC_SUBST(PETSC_ARCH)
AC_SUBST(BOPT)
AC_SUBST(METIS_DIR)
AC_SUBST(FFTW_DIR)
AC_OUTPUT(variables)

dnl Print some information
echo "********************************************************************"
echo "GetDP is configured for"
echo "- OS               : $UNAME"
echo "- C compiler       : $CC $C_FLAGS"
echo "- Fortran compiler : $F77 $F77_FLAGS"
echo "- Linker           : $LINKER"
echo "- Solver           : $SOLVER"
if test "x$enable_petsc" = "xyes"; then
echo "- PETSC_DIR        : $PETSC_DIR"
echo "- PETSC_ARCH       : $PETSC_ARCH"
fi
echo "********************************************************************"
