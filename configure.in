dnl "$Id: configure.in,v 1.15 2003-02-13 23:40:23 geuzaine Exp $"
dnl
dnl Machine independent configuration script for GetDP.
dnl
dnl Process this file with autoconf to produce a configure script.
dnl
dnl Copyright (C) 1997-2003 by P. Dular and C. Geuzaine
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
dnl USA.
dnl 
dnl Please report all bugs and problems to "getdp@geuz.org".

dnl Check that this is the getdp source tree
AC_INIT(Parser/GetDP.y)

dnl Parse --with command-line options
AC_ARG_WITH(gsl-prefix,
            AC_HELP_STRING([--with-gsl-prefix=PFX],
                           [prefix where GSL is installed]),
            [GSL_PREFIX=$withval],[GSL_PREFIX="${GSL_DIR}"])
AC_ARG_WITH(petsc-prefix,
            AC_HELP_STRING([--with-petsc-prefix=PFX],
                           [prefix where PETSc is installed]),
            [PETSC_PREFIX=$withval],[PETSC_PREFIX="${PETSC_DIR}"])
AC_ARG_WITH(bopt,
            AC_HELP_STRING([--with-bopt=PFX],
                           [BOPT option to use with PETSc]),
            [BOPT=$withval])
AC_ARG_WITH(metis-prefix,
            AC_HELP_STRING([--with-metis-prefix=PFX],
                           [prefix where METIS is installed]),
            [METIS_PREFIX=$withval],[METIS_PREFIX="${METIS_DIR}"])
AC_ARG_WITH(fftw-prefix,
            AC_HELP_STRING([--with-fftw-prefix=PFX],
                           [prefix where FFTw is installed]),
            [FFTW_PREFIX=$withval],[FFTW_PREFIX="${FFTW_DIR}"])

dnl Parse --enable command line options
AC_ARG_ENABLE(petsc,
              AC_HELP_STRING([--enable-petsc],
                             [use PETSc linear solvers (default=no)]))
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [build debug stack frame (default=no)]))
AC_ARG_ENABLE(purewin32,
              AC_HELP_STRING([--enable-purewin32],
                             [don't depend on Cygwin on Windows (default=no)]))

dnl Get the operating system and version number
UNAME=`uname`
UVERSION=`uname -r | sed -e '1,$s/[[^0-9]]//g'`

dnl MingW doesn't provide any output when uname is run, even with "-s"
if test "x$UNAME" = "x"; then
  uname="MINGW"
fi

dnl Treat special cases
case "$UNAME" in
  IRIX64*)
    UNAME="IRIX"
    ;;
  CYGWIN*)
    if test "x$enable_purewin32" = "xyes"; then
      UNAME=MINGW
    fi
    ;;
esac

AC_SUBST(UNAME)

dnl Check for default compilers
AC_PROG_CC
AC_PROG_F77

dnl Default compiler flags
C_FLAGS="$CFLAGS"
C_PARSER_FLAGS="$CFLAGS"
F77_FLAGS="$FFLAGS"

dnl See if we need a .exe extension on executables
AC_EXEEXT

dnl Default subdirectories and libraries
GETDP_DIRS="Main Parser Post Function Integration GeoData DofData Numeric DataStr"
GETDP_LIBS="-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lSparskit -lDataStr"

dnl Modify the above defaults and specify the linker
if test "x$enable_petsc" = "xyes"; then

  GETDP_LIBS='-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lDataStr ${PETSC_SLES_LIB} -lm'
  SOLVER='-D_PETSC ${PETSCFLAGS} ${PETSC_INCLUDE}'
  LINKER='${CLINKER}'
  PETSC_INCLUDE_MAKEFILE='include ${PETSC_DIR}/bmake/common/variables'
  if test "x${PETSC_PREFIX}" != "x"; then
    PETSC_DIR="${PETSC_PREFIX}"	
  fi
  PETSC_ARCH=`${PETSC_DIR}/bin/petscarch`
  if test "x${BOPT}" = "x"; then
     BOPT="g_complex"
  fi

else

  GETDP_DIRS="${GETDP_DIRS} Sparskit"
  GETDP_LIBS="${GETDP_LIBS} -lm"
  SOLVER='-D_SPARSKIT -D_ILU_FLOAT'
  LINKER='${F77}'
  case "$UNAME" in
    IRIX*)
      dnl to build portable code between 32 and 64 bit machines
      CC="cc"
      F77="f77"
      C_FLAGS="-O3 -n32 -mips3"
      C_PARSER_FLAGS="-g -n32 -mips3"
      dnl warning: -O3 crashes Sparskit
      F77_FLAGS="-O2 -n32 -mips3"
      dnl warning: -D_ILU_FLOAT crashes Sparskit
      SOLVER="-D_SPARSKIT"
      LINKER="f77 -n32 -mips3"
      ;;
    IRIX64*)
      dnl never called at the moment: we force IRIX
      CC="cc"
      F77="f77"
      C_FLAGS="-O3 -mips4 -64"
      C_PARSER_FLAGS="-g -mips4 -64"
      F77_FLAGS="-O3 -mips4 -64"
      SOLVER="-D_SPARSKIT -D_ILU_FLOAT"
      LINKER="f77 -64"
      ;;
    HP-UX*)
      CC="cc"
      F77="f77"
      C_FLAGS="+O2 +Onolimit -Ae +DAportable"
      C_PARSER_FLAGS="+O1 -Ae +DAportable"
      F77_FLAGS="+O2 +DAportable"
      SOLVER="-D_SPARSKIT -D_ILU_FLOAT -D_UNDERSCORE"
      LINKER="f77 +DAportable"
      GETDP_LIBS="Main/Main.o ${GETDP_LIBS} -lm"
      ;;
    OSF1*)
      CC="cc"
      F77="f77"
      C_FLAGS="-O3"
      C_PARSER_FLAGS="-O1"
      F77_FLAGS="-O3"
      LINKER="f77 -nofor_main"
      ;;
    SunOS*)
      GETDP_LIBS="${GETDP_LIBS} -lsocket -lm"
      ;;
    AIX*)
      CC="cc"
      F77="f77"
      C_FLAGS="-O2 -D_BSD -qMAXMEM=10000"
      SOLVER="-D_SPARSKIT -D_UNDERSCORE"
      LINKER="f77"
      ;;
    MINGW*)
      CC="gcc -mno-cygwin"
      F77="g77 -mno-cygwin"
      C_FLAGS="-g -O3 -DMSDOS"
      F77_FLAGS="-g -O1 -DMSDOS"
      dnl '-lm' is removed on purpose!
      GETDP_LIBS="${GETDP_LIBS}"
      ;;
  esac

fi

dnl Do we trace the function calls in getdp?
if test "x$enable_debug" = "xyes"; then
  C_FLAGS="$C_FLAGS -DGETDP_USE_DEBUG_STACK"
fi

AC_SUBST(C_FLAGS)
AC_SUBST(C_PARSER_FLAGS)
AC_SUBST(F77_FLAGS)
AC_SUBST(LINKER)
AC_SUBST(GETDP_LIBS)
AC_SUBST(GETDP_DIRS)
AC_SUBST(SOLVER)
AC_SUBST(PETSC_INCLUDE_MAKEFILE)
AC_SUBST(PETSC_DIR)
AC_SUBST(PETSC_ARCH)
AC_SUBST(BOPT)

dnl Check for METIS
if test "x${METIS_PREFIX}" != "x"; then
  METIS_DIR="${METIS_PREFIX}"	
fi
AC_SUBST(METIS_DIR)

dnl Check for various programs
AC_PROG_CPP
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar)
if test "x${AR}" = "x:"; then
  AC_MSG_ERROR(Configure could not find the library archiver, aborting.)
fi
AC_SUBST(AR)

dnl Check for GSL
if test "x${GSL_PREFIX}" = "x"; then
  LDFLAGS="-lgslcblas"
else
  LDFLAGS="-L${GSL_PREFIX}/lib -lgslcblas"
fi
AC_CHECK_LIB(gsl,gsl_vector_alloc,GSL="yes",GSL="no")
if test "x${GSL_PREFIX}" = "x"; then
  GSL_LIBS="-lgsl -lgslcblas"
else
  GSL_LIBS="-L${GSL_PREFIX}/lib -lgsl -lgslcblas"
  GSL_INCLUDE="-I${GSL_PREFIX}/include"
fi
AC_SUBST(GSL_LIBS)
AC_SUBST(GSL_INCLUDE)

dnl Check for header files
AC_CHECK_HEADERS(sys/time.h sys/resource.h)

dnl Check for FFTW
if test "x${FFTW_PREFIX}" != "x"; then
  FFTW_DIR="${FFTW_PREFIX}"	
fi
CPPFLAGS="-I${FFTW_DIR}/include"
AC_CHECK_HEADER(fftw.h,FFTW="yes",FFTW="no")
LDFLAGS="-L${FFTW_DIR}/lib -lm"
AC_CHECK_LIB(fftw,fftw_create_plan,FFTW="yes",FFTW="no")
AC_SUBST(FFTW_DIR)

dnl Write output
AC_OUTPUT(variables)

dnl Print some information
echo "*******************************************************************"
echo "GetDP is configured for"
echo "- Operating system: $UNAME"
if test "x$enable_petsc" = "xyes"; then
echo "- Solver: PETSc (BOPT=$BOPT, PETSC_DIR=$PETSC_DIR)"
else
echo "- Solver: Sparskit ($SOLVER)"
fi
echo "*******************************************************************"

dnl Don't print the warning at the moment, since we don't use the GSL yet
dnl if test "x${GSL}" = "xno"; then
dnl   echo "*******************************************************************"
dnl   echo "Configure could not find the GNU Scientific Library (GSL):"
dnl   echo "- if it is installed in a non-standard location, please run"
dnl   echo "  ./configure again with the --with-gsl-prefix option"
dnl   echo "- if it is not installed on your system, you can download it from"
dnl   echo "  http://sources.redhat.com/gsl/"
dnl   echo "*******************************************************************"
dnl fi

