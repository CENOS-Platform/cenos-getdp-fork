dnl "$Id: configure.in,v 1.24 2003-03-18 07:20:56 geuzaine Exp $"
dnl
dnl Copyright (C) 1997-2003 P. Dular, C. Geuzaine
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
dnl USA.
dnl 
dnl Please report all bugs and problems to "getdp@geuz.org".

dnl Process this file with autoconf to produce the configure script.

dnl Check that this is the getdp source tree
AC_INIT(Parser/GetDP.y)

dnl Parse '--with' command-line options
AC_ARG_WITH(gsl-prefix,
            AC_HELP_STRING([--with-gsl-prefix=PFX],
                           [prefix where GSL is installed]),
            [GSL_PREFIX=$withval],[GSL_PREFIX="${GSL_DIR}"])
AC_ARG_WITH(petsc-prefix,
            AC_HELP_STRING([--with-petsc-prefix=PFX],
                           [prefix where PETSc is installed]),
            [PETSC_PREFIX=$withval],[PETSC_PREFIX="${PETSC_DIR}"])
AC_ARG_WITH(bopt,
            AC_HELP_STRING([--with-bopt=PFX],
                           [BOPT option to use with PETSc]),
            [BOPT=$withval])
AC_ARG_WITH(metis-prefix,
            AC_HELP_STRING([--with-metis-prefix=PFX],
                           [prefix where METIS is installed]),
            [METIS_PREFIX=$withval],[METIS_PREFIX="${METIS_DIR}"])
AC_ARG_WITH(fftw-prefix,
            AC_HELP_STRING([--with-fftw-prefix=PFX],
                           [prefix where FFTw is installed]),
            [FFTW_PREFIX=$withval],[FFTW_PREFIX="${FFTW_DIR}"])

dnl Parse '--enable' command line options
AC_ARG_ENABLE(petsc,
              AC_HELP_STRING([--enable-petsc],
                             [use PETSc linear solvers (default=no)]))
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [build debug stack frame (default=no)]))
AC_ARG_ENABLE(purewin32,
              AC_HELP_STRING([--enable-purewin32],
                             [don't depend on Cygwin on Windows (default=no)]))
AC_ARG_ENABLE(gsl,
              AC_HELP_STRING([--enable-gsl],
                             [use GSL as numerical toolkit (default=yes)]))

dnl Get the operating system and version number
UNAME=`uname`
UVERSION=`uname -r | sed -e '1,$s/[[^0-9]]//g'`

dnl Treat special cases (MingW doesn't provide any output when uname is run)
if test "x${UNAME}" = "x"; then
  uname="MINGW"
fi
case "${UNAME}" in
  IRIX64*)
    UNAME="IRIX"
    ;;
  CYGWIN*)
    if test "x$enable_purewin32" = "xyes"; then
      UNAME=MINGW
    fi
    ;;
esac

dnl Check for default compilers
AC_PROG_CC
AC_PROG_F77
if test "x${CC}" = "x" -o "x${F77}" = "x" ; then
  AC_MSG_ERROR([Could not find required compilers, aborting.])
fi

dnl Set default compiler flags
C_FLAGS="${CFLAGS}"
C_PARSER_FLAGS="${CFLAGS}"
F77_FLAGS="${FFLAGS}"

dnl Check for various programs
AC_PROG_CPP
AC_PROG_RANLIB

dnl How to build static libraries?
AC_PATH_PROG(AR, ar)
if test "x${AR}" = "x:"; then
  AC_MSG_ERROR([Could not find the library archiver, aborting.])
fi
AR="${AR} ruvs"

dnl Check for standard math library
AC_CHECK_LIB(m,main)

dnl See if we need a .exe extension on executables
AC_EXEEXT

dnl Set default subdirectories and libraries
GETDP_DIRS="Main Parser Post Function Integration GeoData DofData Numeric DataStr FMM"
GETDP_LIBS="-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lSparskit -lDataStr -lFMM"

dnl Modify the above defaults and specify the linker
if test "x$enable_petsc" = "xyes"; then

  GETDP_LIBS='-Llib -lMain -lParser -lPost -lFunction -lIntegration -lGeoData -lDofData -lNumeric -lDataStr -lFMM ${PETSC_SLES_LIB} -lm'
  SOLVER='-D_PETSC ${PETSCFLAGS} ${PETSC_INCLUDE}'
  LINKER='${CLINKER}'
  PETSC_INCLUDE_MAKEFILE='include ${PETSC_DIR}/bmake/common/variables'
  if test "x${PETSC_PREFIX}" != "x"; then
    PETSC_DIR="${PETSC_PREFIX}"	
  fi
  PETSC_ARCH=`${PETSC_DIR}/bin/petscarch`
  if test "x${BOPT}" = "x"; then
     BOPT="g_complex"
  fi

else

  GETDP_DIRS="${GETDP_DIRS} Sparskit"
  SOLVER='-D_SPARSKIT -D_ILU_FLOAT'
  LINKER='${F77}'
  case "${UNAME}" in
    IRIX*)
      dnl Build portable code between 32 and 64 bit machines
      CC="cc"
      F77="f77"
      C_FLAGS="-O3 -n32 -mips3"
      C_PARSER_FLAGS="-g -n32 -mips3"
      dnl Warning: -O3 crashes Sparskit
      F77_FLAGS="-O2 -n32 -mips3"
      dnl Warning: -D_ILU_FLOAT crashes Sparskit
      SOLVER="-D_SPARSKIT"
      LINKER="f77 -n32 -mips3"
      ;;
    IRIX64*)
      dnl Never used at the moment: we force IRIX
      CC="cc"
      F77="f77"
      C_FLAGS="-O3 -mips4 -64"
      C_PARSER_FLAGS="-g -mips4 -64"
      F77_FLAGS="-O3 -mips4 -64"
      SOLVER="-D_SPARSKIT -D_ILU_FLOAT"
      LINKER="f77 -64"
      ;;
    HP-UX*)
      CC="cc"
      F77="f77"
      C_FLAGS="+O2 +Onolimit -Ae +DAportable"
      C_PARSER_FLAGS="+O1 -Ae +DAportable"
      F77_FLAGS="+O2 +DAportable"
      SOLVER="-D_SPARSKIT -D_ILU_FLOAT -D_UNDERSCORE"
      LINKER="f77 +DAportable"
      GETDP_LIBS="Main/Main.o ${GETDP_LIBS}"
      ;;
    OSF1*)
      CC="cc"
      F77="f77"
      C_FLAGS="-O3"
      C_PARSER_FLAGS="-O1"
      F77_FLAGS="-O3"
      LINKER="f77 -nofor_main"
      ;;
    SunOS*)
      GETDP_LIBS="${GETDP_LIBS} -lsocket"
      ;;
    AIX*)
      CC="cc"
      F77="f77"
      C_FLAGS="-O2 -D_BSD -qMAXMEM=10000"
      C_PARSER_FLAGS="-O1 -D_BSD -qMAXMEM=10000"
      F77_FLAGS="-O2 -D_BSD -qMAXMEM=10000"
      SOLVER="-D_SPARSKIT -D_UNDERSCORE"
      ;;
    MINGW*)
      CC="gcc -mno-cygwin"
      F77="g77 -mno-cygwin"
      C_FLAGS="-g -O3 -DMSDOS"
      F77_FLAGS="-g -O1 -DMSDOS"
      ;;
  esac

fi

dnl Check for GSL
if test "x$enable_gsl" != "xno"; then
  if test "x${GSL_PREFIX}" != "x"; then
    LDFLAGS="-L${GSL_PREFIX}/lib ${LDFLAGS}"
  fi
  AC_CHECK_LIB(gslcblas,main)
  AC_CHECK_LIB(gsl,main,GSL="yes",GSL="no")
  if test "x${GSL}" = "xyes"; then
    C_FLAGS="${C_FLAGS} -DHAVE_GSL"
    if test "x${GSL_PREFIX}" = "x"; then
      GETDP_LIBS="${GETDP_LIBS} -lgsl -lgslcblas"
    else
      GETDP_LIBS="${GETDP_LIBS} -L${GSL_PREFIX}/lib -lgsl -lgslcblas"
      C_FLAGS="${C_FLAGS} -I${GSL_PREFIX}/include"
    fi
  fi
fi
if test "x${GSL}" != "xyes"; then
  dnl Check if non-free numerical recipes routines are in the tree
  AC_CHECK_FILE(./NR/dsvdcmp.c,NR="yes",NR="no")
  if test "x${NR}" = "xyes"; then
    echo "********************************************************************"
    echo "You are building a non-free version of GetDP, using code copyright"
    echo "(C) 1986-92 Numerical Recipes Software J!0."
    echo "To use the GSL instead, run configure again with the --enable-gsl"
    echo "option."
    echo "********************************************************************"
dnl FIXME: remove NR below and uncomment this as soon as GSL integration is complete!
dnl    GETDP_DIRS="${GETDP_DIRS} NR"
dnl    GETDP_LIBS="${GETDP_LIBS} -lNR"
  else
    echo "********************************************************************"
    echo "This is the free version of GetDP and configure could not find"
    echo "the GNU Scientific Library (GSL) on your system:"
    echo "- if it is installed in a non-standard location, please run"
    echo "  configure again with the --with-gsl-prefix option"
    echo "- if it is not installed on your system, you can download it from"
    echo "  http://sources.redhat.com/gsl/"
    echo ""
    echo "IMPORTANT NOTE: You need to install GSL version 1.2 or above. All"
    echo "versions <= 1.1.1 have a bug in the singular value decomposition"
    echo "algorithm that may cause GetDP to hang during execution."
    echo "********************************************************************"
    AC_MSG_ERROR([Could not find GSL, aborting.])
  fi
fi

dnl FIXME: remove this as soon as GSL integration is complete!
GETDP_DIRS="${GETDP_DIRS} NR"
GETDP_LIBS="${GETDP_LIBS} -lNR"

dnl Do we trace the function calls in getdp?
if test "x$enable_debug" = "xyes"; then
  C_FLAGS="${C_FLAGS} -DGETDP_USE_DEBUG_STACK"
fi

dnl Finish link line
case "${UNAME}" in
  MINGW*)
    dnl '-lm' is removed on purpose!
    ;;
  *)
    GETDP_LIBS="${GETDP_LIBS} -lm"    
    ;;
esac

dnl Check for METIS
if test "x${METIS_PREFIX}" != "x"; then
  METIS_DIR="${METIS_PREFIX}"	
fi

dnl Check for FFTW (not used in public release)
if test "x${FFTW_PREFIX}" != "x"; then
  FFTW_DIR="${FFTW_PREFIX}"	
fi
CPPFLAGS="-I${FFTW_DIR}/include"
AC_CHECK_HEADER(fftw.h,FFTW="yes",FFTW="no")
LDFLAGS="-L${FFTW_DIR}/lib -lm"
AC_CHECK_LIB(fftw,main,FFTW="yes",FFTW="no")

dnl Check for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h sys/resource.h)

dnl Write output
AC_SUBST(UNAME)
AC_SUBST(C_FLAGS)
AC_SUBST(C_PARSER_FLAGS)
AC_SUBST(F77_FLAGS)
AC_SUBST(SOLVER)
AC_SUBST(LINKER)
AC_SUBST(GETDP_DIRS)
AC_SUBST(GETDP_LIBS)
AC_SUBST(AR)
AC_SUBST(PETSC_INCLUDE_MAKEFILE)
AC_SUBST(PETSC_DIR)
AC_SUBST(PETSC_ARCH)
AC_SUBST(BOPT)
AC_SUBST(METIS_DIR)
AC_SUBST(FFTW_DIR)
AC_OUTPUT(variables)

dnl Print some information
echo "********************************************************************"
echo "GetDP is configured for"
echo "- OS        : $UNAME"
echo "- C FLAGS   : $C_FLAGS"
echo "- F77 FLAGS : $F77_FLAGS"
echo "- SOLVER    : $SOLVER"
if test "x$enable_petsc" = "xyes"; then
echo "- PETSC_DIR : $PETSC_DIR"
echo "- BOPT      : $BOPT"
fi
echo "********************************************************************"
