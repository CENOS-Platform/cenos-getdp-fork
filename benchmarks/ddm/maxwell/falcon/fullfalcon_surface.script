Include "params.geo";

Mesh.RemeshParametrization=7;
Mesh.RemeshAlgorithm=1;
Mesh.Algorithm=6;

Mesh.CharacteristicLengthFromPoints = 0;
Mesh.CharacteristicLengthMin = lc;
Mesh.CharacteristicLengthMax = lc;
Mesh.LcIntegrationPrecision = 1.e-5;
Mesh.MinimumCirclePoints = 50;
Mesh.CharacteristicLengthExtendFromBoundary = 0;
Mesh.CharacteristicLengthFromCurvature = 0;
Mesh.CharacteristicLengthFromPoints = 0;

Merge "InitialMeshFullFalcon.msh";

CreateTopology;

// Make all lines compound:
ll[] = Line "*";
For j In {0 : #ll[]-1}
  Compound Line(1000+j) = ll[j];
  Physical Line(1000+j) = (1000+j);
EndFor

// Make all surfaces compound and physical:
ss[] = Surface "*";
For i In {0 : #ss[]-1}
  Compound Surface(i+1000) = ss[i];
  Physical Surface(i+1) = { i+1000 };
EndFor


Mesh 2;
Save "SurfaceMeshUniform.stl";
Save "SurfaceMeshUniform.msh";

If(TWO_PLANES)
Plugin(NewView).Run;
x = -Pi/10;
y = -Pi/10;
z = -Pi/10;
A = Cos(x); B = Sin(x); C = Cos(y); D = Sin(y); E = Cos(z); F = Sin(z);
AD = A * D; BD = B * D;
Plugin(Transform).A11 = C*E;
Plugin(Transform).A12 = BD*E+A*F;
Plugin(Transform).A13 =-AD*E+B*F;
Plugin(Transform).A21 =-C*F;
Plugin(Transform).A22 =-BD*F+A*E;
Plugin(Transform).A23 = AD*F+B*E;
Plugin(Transform).A31 = D;
Plugin(Transform).A32 =-B*C;
Plugin(Transform).A33 = A*C;
Plugin(Transform).Tx = 11;
Plugin(Transform).Ty = 1;
Plugin(Transform).Tz = -1;
Plugin(Transform).Run;
Save "SurfaceMeshUniform2.msh";
Save "SurfaceMeshUniform2.stl";
EndIf

//Delete All;
